/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsGeneralImport } from './routes/settings/general'
import { Route as ContactsContactImport } from './routes/contacts/_contact'
import { Route as chatschatImport } from './routes/(chats)/__chat'
import { Route as ContactsContactIndexImport } from './routes/contacts/_contact.index'
import { Route as chatschatIndexImport } from './routes/(chats)/__chat.index'
import { Route as ContactsContactSentImport } from './routes/contacts/_contact.sent'
import { Route as ContactsContactRequestImport } from './routes/contacts/_contact.request'

// Create Virtual Routes

const ContactsImport = createFileRoute('/contacts')()
const chatsImport = createFileRoute('/(chats)')()

// Create/Update Routes

const ContactsRoute = ContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => rootRoute,
} as any)

const chatsRoute = chatsImport.update({
  id: '/(chats)',
  getParentRoute: () => rootRoute,
} as any)

const SettingsGeneralRoute = SettingsGeneralImport.update({
  id: '/settings/general',
  path: '/settings/general',
  getParentRoute: () => rootRoute,
} as any)

const ContactsContactRoute = ContactsContactImport.update({
  id: '/_contact',
  getParentRoute: () => ContactsRoute,
} as any)

const chatschatRoute = chatschatImport.update({
  id: '/__chat',
  getParentRoute: () => chatsRoute,
} as any)

const ContactsContactIndexRoute = ContactsContactIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContactsContactRoute,
} as any)

const chatschatIndexRoute = chatschatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => chatschatRoute,
} as any)

const ContactsContactSentRoute = ContactsContactSentImport.update({
  id: '/sent',
  path: '/sent',
  getParentRoute: () => ContactsContactRoute,
} as any)

const ContactsContactRequestRoute = ContactsContactRequestImport.update({
  id: '/request',
  path: '/request',
  getParentRoute: () => ContactsContactRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(chats)': {
      id: '/(chats)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof chatsImport
      parentRoute: typeof rootRoute
    }
    '/(chats)/__chat': {
      id: '/(chats)/__chat'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof chatschatImport
      parentRoute: typeof chatsRoute
    }
    '/contacts': {
      id: '/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsImport
      parentRoute: typeof rootRoute
    }
    '/contacts/_contact': {
      id: '/contacts/_contact'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsContactImport
      parentRoute: typeof ContactsRoute
    }
    '/settings/general': {
      id: '/settings/general'
      path: '/settings/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof SettingsGeneralImport
      parentRoute: typeof rootRoute
    }
    '/contacts/_contact/request': {
      id: '/contacts/_contact/request'
      path: '/request'
      fullPath: '/contacts/request'
      preLoaderRoute: typeof ContactsContactRequestImport
      parentRoute: typeof ContactsContactImport
    }
    '/contacts/_contact/sent': {
      id: '/contacts/_contact/sent'
      path: '/sent'
      fullPath: '/contacts/sent'
      preLoaderRoute: typeof ContactsContactSentImport
      parentRoute: typeof ContactsContactImport
    }
    '/(chats)/__chat/': {
      id: '/(chats)/__chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof chatschatIndexImport
      parentRoute: typeof chatschatImport
    }
    '/contacts/_contact/': {
      id: '/contacts/_contact/'
      path: '/'
      fullPath: '/contacts/'
      preLoaderRoute: typeof ContactsContactIndexImport
      parentRoute: typeof ContactsContactImport
    }
  }
}

// Create and export the route tree

interface chatschatRouteChildren {
  chatschatIndexRoute: typeof chatschatIndexRoute
}

const chatschatRouteChildren: chatschatRouteChildren = {
  chatschatIndexRoute: chatschatIndexRoute,
}

const chatschatRouteWithChildren = chatschatRoute._addFileChildren(
  chatschatRouteChildren,
)

interface chatsRouteChildren {
  chatschatRoute: typeof chatschatRouteWithChildren
}

const chatsRouteChildren: chatsRouteChildren = {
  chatschatRoute: chatschatRouteWithChildren,
}

const chatsRouteWithChildren = chatsRoute._addFileChildren(chatsRouteChildren)

interface ContactsContactRouteChildren {
  ContactsContactRequestRoute: typeof ContactsContactRequestRoute
  ContactsContactSentRoute: typeof ContactsContactSentRoute
  ContactsContactIndexRoute: typeof ContactsContactIndexRoute
}

const ContactsContactRouteChildren: ContactsContactRouteChildren = {
  ContactsContactRequestRoute: ContactsContactRequestRoute,
  ContactsContactSentRoute: ContactsContactSentRoute,
  ContactsContactIndexRoute: ContactsContactIndexRoute,
}

const ContactsContactRouteWithChildren = ContactsContactRoute._addFileChildren(
  ContactsContactRouteChildren,
)

interface ContactsRouteChildren {
  ContactsContactRoute: typeof ContactsContactRouteWithChildren
}

const ContactsRouteChildren: ContactsRouteChildren = {
  ContactsContactRoute: ContactsContactRouteWithChildren,
}

const ContactsRouteWithChildren = ContactsRoute._addFileChildren(
  ContactsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof chatschatIndexRoute
  '/contacts': typeof ContactsContactRouteWithChildren
  '/settings/general': typeof SettingsGeneralRoute
  '/contacts/request': typeof ContactsContactRequestRoute
  '/contacts/sent': typeof ContactsContactSentRoute
  '/contacts/': typeof ContactsContactIndexRoute
}

export interface FileRoutesByTo {
  '/contacts': typeof ContactsContactIndexRoute
  '/settings/general': typeof SettingsGeneralRoute
  '/contacts/request': typeof ContactsContactRequestRoute
  '/contacts/sent': typeof ContactsContactSentRoute
  '/': typeof chatschatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(chats)': typeof chatsRouteWithChildren
  '/(chats)/__chat': typeof chatschatRouteWithChildren
  '/contacts': typeof ContactsRouteWithChildren
  '/contacts/_contact': typeof ContactsContactRouteWithChildren
  '/settings/general': typeof SettingsGeneralRoute
  '/contacts/_contact/request': typeof ContactsContactRequestRoute
  '/contacts/_contact/sent': typeof ContactsContactSentRoute
  '/(chats)/__chat/': typeof chatschatIndexRoute
  '/contacts/_contact/': typeof ContactsContactIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contacts'
    | '/settings/general'
    | '/contacts/request'
    | '/contacts/sent'
    | '/contacts/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/contacts'
    | '/settings/general'
    | '/contacts/request'
    | '/contacts/sent'
    | '/'
  id:
    | '__root__'
    | '/(chats)'
    | '/(chats)/__chat'
    | '/contacts'
    | '/contacts/_contact'
    | '/settings/general'
    | '/contacts/_contact/request'
    | '/contacts/_contact/sent'
    | '/(chats)/__chat/'
    | '/contacts/_contact/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  chatsRoute: typeof chatsRouteWithChildren
  ContactsRoute: typeof ContactsRouteWithChildren
  SettingsGeneralRoute: typeof SettingsGeneralRoute
}

const rootRouteChildren: RootRouteChildren = {
  chatsRoute: chatsRouteWithChildren,
  ContactsRoute: ContactsRouteWithChildren,
  SettingsGeneralRoute: SettingsGeneralRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(chats)",
        "/contacts",
        "/settings/general"
      ]
    },
    "/(chats)": {
      "filePath": "(chats)",
      "children": [
        "/(chats)/__chat"
      ]
    },
    "/(chats)/__chat": {
      "filePath": "(chats)/__chat.tsx",
      "parent": "/(chats)",
      "children": [
        "/(chats)/__chat/"
      ]
    },
    "/contacts": {
      "filePath": "contacts",
      "children": [
        "/contacts/_contact"
      ]
    },
    "/contacts/_contact": {
      "filePath": "contacts/_contact.tsx",
      "parent": "/contacts",
      "children": [
        "/contacts/_contact/request",
        "/contacts/_contact/sent",
        "/contacts/_contact/"
      ]
    },
    "/settings/general": {
      "filePath": "settings/general.tsx"
    },
    "/contacts/_contact/request": {
      "filePath": "contacts/_contact.request.tsx",
      "parent": "/contacts/_contact"
    },
    "/contacts/_contact/sent": {
      "filePath": "contacts/_contact.sent.tsx",
      "parent": "/contacts/_contact"
    },
    "/(chats)/__chat/": {
      "filePath": "(chats)/__chat.index.tsx",
      "parent": "/(chats)/__chat"
    },
    "/contacts/_contact/": {
      "filePath": "contacts/_contact.index.tsx",
      "parent": "/contacts/_contact"
    }
  }
}
ROUTE_MANIFEST_END */
