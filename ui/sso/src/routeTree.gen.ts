/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as dashboardIndexImport } from './routes/(dashboard)/index'
import { Route as AuthAuthImport } from './routes/auth/_auth'
import { Route as AuthAuthRegisterImport } from './routes/auth/_auth.register'
import { Route as AuthAuthLoginImport } from './routes/auth/_auth.login'
import { Route as AuthAuthOtpNewAccountImport } from './routes/auth/_auth.otp/new-account'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const dashboardIndexRoute = dashboardIndexImport.update({
  id: '/(dashboard)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthOtpNewAccountRoute = AuthAuthOtpNewAccountImport.update({
  id: '/otp/new-account',
  path: '/otp/new-account',
  getParentRoute: () => AuthAuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthRoute
    }
    '/(dashboard)/': {
      id: '/(dashboard)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/_auth/login': {
      id: '/auth/_auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/register': {
      id: '/auth/_auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/otp/new-account': {
      id: '/auth/_auth/otp/new-account'
      path: '/otp/new-account'
      fullPath: '/auth/otp/new-account'
      preLoaderRoute: typeof AuthAuthOtpNewAccountImport
      parentRoute: typeof AuthAuthImport
    }
  }
}

// Create and export the route tree

interface AuthAuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
  AuthAuthOtpNewAccountRoute: typeof AuthAuthOtpNewAccountRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
  AuthAuthOtpNewAccountRoute: AuthAuthOtpNewAccountRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthAuthRouteWithChildren
  '/': typeof dashboardIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/auth/otp/new-account': typeof AuthAuthOtpNewAccountRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthAuthRouteWithChildren
  '/': typeof dashboardIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/auth/otp/new-account': typeof AuthAuthOtpNewAccountRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/(dashboard)/': typeof dashboardIndexRoute
  '/auth/_auth/login': typeof AuthAuthLoginRoute
  '/auth/_auth/register': typeof AuthAuthRegisterRoute
  '/auth/_auth/otp/new-account': typeof AuthAuthOtpNewAccountRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/auth/otp/new-account'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/' | '/auth/login' | '/auth/register' | '/auth/otp/new-account'
  id:
    | '__root__'
    | '/auth'
    | '/auth/_auth'
    | '/(dashboard)/'
    | '/auth/_auth/login'
    | '/auth/_auth/register'
    | '/auth/_auth/otp/new-account'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  dashboardIndexRoute: typeof dashboardIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  dashboardIndexRoute: dashboardIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/auth",
        "/(dashboard)/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_auth"
      ]
    },
    "/auth/_auth": {
      "filePath": "auth/_auth.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_auth/login",
        "/auth/_auth/register",
        "/auth/_auth/otp/new-account"
      ]
    },
    "/(dashboard)/": {
      "filePath": "(dashboard)/index.tsx"
    },
    "/auth/_auth/login": {
      "filePath": "auth/_auth.login.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/register": {
      "filePath": "auth/_auth.register.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/otp/new-account": {
      "filePath": "auth/_auth.otp/new-account.tsx",
      "parent": "/auth/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
